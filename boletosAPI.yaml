openapi: 3.1.0
info:
  title: BoletosAPI
  version: '1.0'
  description: Api para gerenciamento de boletos
  summary: Summary
servers:
  - url: 'http://localhost:3000'
paths:
  /clientes/boletos:
    parameters: []
    get:
      summary: API para gerenciamento de boletos
      tags: []
      responses:
        '200':
          description: Boletos encontrados
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Boleto'
              examples:
                Get User Alice Smith:
                  value:
                    id: 142
                    firstName: Alice
                    lastName: Smith
                    email: alice.smith@gmail.com
                    dateOfBirth: '1997-10-31'
                    emailVerified: true
                    signUpDate: '2019-08-24'
        '404':
          description: Boletos não encontrados
      operationId: get-idcliente
      description: Recuperar lista com as informações dos boletos cadastrados do IDcliente correspondente.
    patch:
      summary: Update User Information
      operationId: patch-users-userId
      responses:
        '200':
          description: Boleto não encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Updated User Rebecca Baker:
                  value:
                    id: 13
                    firstName: Rebecca
                    lastName: Baker
                    email: rebecca@gmail.com
                    dateOfBirth: '1985-10-02'
                    emailVerified: false
                    createDate: '2019-08-24'
        '404':
          description: Boleto não encontrado
        '409':
          description: Boleto ja atualizado
      description: Atualiza as informações de um boleto de um cliente
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                  description: 'If a new email is given, the user''s email verified property will be set to false.'
                dateOfBirth:
                  type: string
            examples:
              Update First Name:
                value:
                  firstName: Rebecca
              Update Email:
                value:
                  email: rebecca@gmail.com
              Update Last Name & Date of Birth:
                value:
                  lastName: Baker
                  dateOfBirth: '1985-10-02'
        description: Patch user properties to update.
    delete:
      summary: ''
      operationId: delete-idboletos
      responses:
        '200':
          description: Boleto removido
        '400':
          description: Boleto não encontrado
      description: Remove um boleto de um cliente
    post:
      summary: ''
      operationId: post-idboletos
      responses:
        '200':
          description: OK
        '400':
          description: Informações obrigatórias ausentes
      description: Adiciona um novo boleto
  '/clientes/{id}':
    post:
      summary: ''
      operationId: post-clientes
      responses:
        '200':
          description: User Created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                New User Bob Fellow:
                  value:
                    id: 12
                    firstName: Bob
                    lastName: Fellow
                    email: bob.fellow@gmail.com
                    dateOfBirth: '1996-08-24'
                    emailVerified: false
                    createDate: '2020-11-18'
        '400':
          description: Missing Required Information
        '409':
          description: Email Already Taken
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                firstName:
                  type: string
                lastName:
                  type: string
                email:
                  type: string
                dateOfBirth:
                  type: string
                  format: date
              required:
                - firstName
                - lastName
                - email
                - dateOfBirth
            examples:
              Create User Bob Fellow:
                value:
                  firstName: Bob
                  lastName: Fellow
                  email: bob.fellow@gmail.com
                  dateOfBirth: '1996-08-24'
        description: Post the necessary fields for the API to create a new user.
      description: Create a new user.
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: ID dos clientes
    get:
      summary: Gerenciamento de cliente
      operationId: get-clientes
      responses:
        '200':
          description: OK
      description: Recuperar lista com as informações dos cliente.
components:
  schemas:
    User:
      title: User
      type: object
      description: ''
      examples:
        - id: 142
          firstName: Alice
          lastName: Smith
          email: alice.smith@gmail.com
          dateOfBirth: '1997-10-31'
          emailVerified: true
          signUpDate: '2019-08-24'
      properties:
        id:
          type: integer
          description: Unique identifier for the given user.
        firstName:
          type: string
        lastName:
          type: string
        email:
          type: string
          format: email
        dateOfBirth:
          type: string
          format: date
          example: '1997-10-31'
        emailVerified:
          type: boolean
          description: Set to true if the user's email has been verified.
        createDate:
          type: string
          format: date
          description: The date that the user was created.
      required:
        - id
        - firstName
        - lastName
        - email
        - emailVerified
    Boleto:
      title: Boleto
      type: object
      properties:
        id:
          type: integer
        idcliente:
          type: integer
        apelido:
          type: string
        banco:
          type: string
        dtvencimento:
          type: string
        dtpagamento:
          type: string
        status:
          type: boolean
        valor:
          type: number
        juros:
          type: string
